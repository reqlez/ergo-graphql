"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputBuilder = exports.SAFE_MIN_BOX_VALUE = void 0;
const invalidRegistersPacking_1 = require("../errors/invalidRegistersPacking");
const undefinedCreationHeight_1 = require("../errors/undefinedCreationHeight");
const undefinedMintingContext_1 = require("../errors/undefinedMintingContext");
const models_1 = require("../models");
const tokensCollection_1 = require("../models/collections/tokensCollection");
const byteColl_1 = require("../serialization/sigma/byteColl");
const arrayUtils_1 = require("../utils/arrayUtils");
const bigIntUtils_1 = require("../utils/bigIntUtils");
const boxUtils_1 = require("../utils/boxUtils");
const objectUtils_1 = require("../utils/objectUtils");
const stringUtils_1 = require("../utils/stringUtils");
exports.SAFE_MIN_BOX_VALUE = 1000000n;
class OutputBuilder {
    _value;
    _address;
    _tokens;
    _creationHeight;
    _registers;
    _minting;
    constructor(value, recipient, creationHeight) {
        this._value = (0, bigIntUtils_1.toBigInt)(value);
        this._creationHeight = creationHeight;
        this._tokens = new tokensCollection_1.TokensCollection();
        this._registers = {};
        if (typeof recipient === "string") {
            this._address = (0, stringUtils_1.isHex)(recipient)
                ? models_1.ErgoAddress.fromErgoTree(recipient)
                : models_1.ErgoAddress.fromBase58(recipient);
        }
        else {
            this._address = recipient;
        }
    }
    get value() {
        return this._value;
    }
    get address() {
        return this._address;
    }
    get ergoTree() {
        return this._address.ergoTree;
    }
    get creationHeight() {
        return this._creationHeight;
    }
    get tokens() {
        return this._tokens;
    }
    get additionalRegisters() {
        return this._registers;
    }
    get minting() {
        return this._minting;
    }
    addTokens(tokens, options) {
        if (tokens instanceof tokensCollection_1.TokensCollection) {
            this._tokens.add(tokens.toArray(), options);
        }
        else {
            this._tokens.add(tokens, options);
        }
        return this;
    }
    mintToken(token) {
        this._minting = { ...token, amount: (0, bigIntUtils_1.toBigInt)(token.amount) };
        return this;
    }
    setCreationHeight(height, options) {
        if ((0, objectUtils_1.isUndefined)(options) ||
            options.replace === true ||
            (options.replace === false && (0, objectUtils_1.isUndefined)(this._creationHeight))) {
            this._creationHeight = height;
        }
        return this;
    }
    setAdditionalRegisters(registers) {
        this._registers = (0, objectUtils_1.removeUndefined)(registers);
        if (!(0, boxUtils_1.areRegistersDenselyPacked)(registers)) {
            throw new invalidRegistersPacking_1.InvalidRegistersPacking();
        }
        return this;
    }
    eject(ejector) {
        ejector({ tokens: this._tokens });
    }
    build(transactionInputs) {
        let tokens = this.tokens.toArray();
        if (this.minting) {
            if ((0, arrayUtils_1.isEmpty)(transactionInputs)) {
                throw new undefinedMintingContext_1.UndefinedMintingContext();
            }
            if ((0, arrayUtils_1.isEmpty)(this.additionalRegisters)) {
                this.setAdditionalRegisters({
                    R4: new byteColl_1.ByteColl(Buffer.from(this.minting.name || "", "utf-8")).toString(),
                    R5: new byteColl_1.ByteColl(Buffer.from(this.minting.description || "", "utf-8")).toString(),
                    R6: new byteColl_1.ByteColl(Buffer.from(this.minting.decimals?.toString() || "0", "utf-8")).toString()
                });
            }
            tokens = [
                {
                    tokenId: (0, arrayUtils_1.first)(transactionInputs).boxId,
                    amount: this.minting.amount
                },
                ...tokens
            ];
        }
        if ((0, objectUtils_1.isUndefined)(this.creationHeight)) {
            throw new undefinedCreationHeight_1.UndefinedCreationHeight();
        }
        return {
            value: this.value.toString(),
            ergoTree: this.ergoTree,
            creationHeight: this.creationHeight,
            assets: tokens.map((token) => {
                return {
                    tokenId: token.tokenId,
                    amount: token.amount.toString()
                };
            }),
            additionalRegisters: this.additionalRegisters
        };
    }
}
exports.OutputBuilder = OutputBuilder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0QnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9idWlsZGVyL291dHB1dEJ1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0VBQTRFO0FBQzVFLCtFQUE0RTtBQUM1RSwrRUFBNEU7QUFDNUUsc0NBQXdDO0FBQ3hDLDZFQUEyRjtBQUMzRiw4REFBMkQ7QUFZM0Qsb0RBQXFEO0FBQ3JELHNEQUFnRDtBQUNoRCxnREFBOEQ7QUFDOUQsc0RBQW9FO0FBQ3BFLHNEQUE2QztBQUVoQyxRQUFBLGtCQUFrQixHQUFHLFFBQVEsQ0FBQztBQUUzQyxNQUFhLGFBQWE7SUFDUCxNQUFNLENBQVM7SUFDZixRQUFRLENBQWM7SUFDdEIsT0FBTyxDQUFtQjtJQUNuQyxlQUFlLENBQVU7SUFDekIsVUFBVSxDQUF3QjtJQUNsQyxRQUFRLENBQW9CO0lBRXBDLFlBQ0UsS0FBYSxFQUNiLFNBQWdELEVBQ2hELGNBQXVCO1FBRXZCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBQSxzQkFBUSxFQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxlQUFlLEdBQUcsY0FBYyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxtQ0FBZ0IsRUFBRSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO1FBRXJCLElBQUksT0FBTyxTQUFTLEtBQUssUUFBUSxFQUFFO1lBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBQSxtQkFBSyxFQUFDLFNBQVMsQ0FBQztnQkFDOUIsQ0FBQyxDQUFDLG9CQUFXLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztnQkFDckMsQ0FBQyxDQUFDLG9CQUFXLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ3ZDO2FBQU07WUFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQztTQUMzQjtJQUNILENBQUM7SUFFRCxJQUFX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