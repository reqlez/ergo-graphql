"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputsCollection = void 0;
const errors_1 = require("../../errors");
const arrayUtils_1 = require("../../utils/arrayUtils");
const objectUtils_1 = require("../../utils/objectUtils");
const collection_1 = require("./collection");
class OutputsCollection extends collection_1.Collection {
    constructor(outputs) {
        super();
        if (outputs) {
            this.add(outputs);
        }
    }
    _add(outputBuilder) {
        this._items.push(outputBuilder);
    }
    add(outputs) {
        if (!Array.isArray(outputs)) {
            this._add(outputs);
            return this;
        }
        for (const output of outputs) {
            this._add(output);
        }
        return this;
    }
    remove(outputs) {
        let index = -1;
        if (typeof outputs === "number") {
            if (this._isIndexOutOfBounds(outputs)) {
                throw new RangeError(`Index '${outputs}' is out of range.`);
            }
            index = outputs;
        }
        else {
            index = this._items.lastIndexOf(outputs);
            if (this._isIndexOutOfBounds(index)) {
                throw new errors_1.NotFoundError("The output you are trying to remove is not present in the outputs collection.");
            }
        }
        if (index > -1) {
            this._items.splice(index, 1);
        }
        return this;
    }
    clone() {
        return new OutputsCollection(this._items);
    }
    sum(basis) {
        const tokens = {};
        let nanoErgs = 0n;
        if (basis) {
            if (basis.nanoErgs) {
                nanoErgs = basis.nanoErgs;
            }
            if ((0, arrayUtils_1.some)(basis.tokens)) {
                for (const token of basis.tokens) {
                    if ((0, objectUtils_1.isUndefined)(token.amount)) {
                        continue;
                    }
                    tokens[token.tokenId] = (tokens[token.tokenId] || 0n) + token.amount;
                }
            }
        }
        for (const box of this._items) {
            nanoErgs += box.value;
            for (const token of box.tokens) {
                tokens[token.tokenId] = (tokens[token.tokenId] || 0n) + token.amount;
            }
        }
        return {
            nanoErgs,
            tokens: Object.keys(tokens).map((tokenId) => ({ tokenId, amount: tokens[tokenId] }))
        };
    }
}
exports.OutputsCollection = OutputsCollection;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0c0NvbGxlY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbW9kZWxzL2NvbGxlY3Rpb25zL291dHB1dHNDb2xsZWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHlDQUE2QztBQUM3Qyx1REFBOEM7QUFFOUMseURBQXNEO0FBQ3RELDZDQUEwQztBQUUxQyxNQUFhLGlCQUFrQixTQUFRLHVCQUF5QjtJQUM5RCxZQUFZLE9BQXlDO1FBQ25ELEtBQUssRUFBRSxDQUFDO1FBRVIsSUFBSSxPQUFPLEVBQUU7WUFDWCxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ25CO0lBQ0gsQ0FBQztJQUVPLElBQUksQ0FBQyxhQUE0QjtRQUN2QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBS00sR0FBRyxDQUFDLE9BQXdDO1FBQ2pELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFbkIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELEtBQUssTUFBTSxNQUFNLElBQUksT0FBTyxFQUFFO1lBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDbkI7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFJTSxNQUFNLENBQUMsT0FBK0I7UUFDM0MsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDZixJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVEsRUFBRTtZQUMvQixJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDckMsTUFBTSxJQUFJLFVBQVUsQ0FBQyxVQUFVLE9BQU8sb0JBQW9CLENBQUMsQ0FBQzthQUM3RDtZQUVELEtBQUssR0FBRyxPQUFPLENBQUM7U0FDakI7YUFBTTtZQUNMLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUV6QyxJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDbkMsTUFBTSxJQUFJLHNCQUFhLENBQ3JCLCtFQUErRSxDQUNoRixDQUFDO2FBQ0g7U0FDRjtRQUVELElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzlCO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sS0FBSztRQUNWLE9BQU8sSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVNLEdBQUcsQ0FBQyxLQUFvQztRQUM3QyxNQUFNLE1BQU0sR0FBa0MsRUFBRSxDQUFDO1FBQ2pELElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUVsQixJQUFJLEtBQUssRUFBRTtZQUNULElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtnQkFDbEIsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUM7YUFDM0I7WUFFRCxJQUFJLElBQUEsaUJBQUksRUFBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7Z0JBQ3RCLEtBQUssTUFBTSxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sRUFBRTtvQkFDaEMsSUFBSSxJQUFBLHlCQUFXLEVBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFO3dCQUM3QixTQUFTO3FCQUNWO29CQUVELE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7aUJBQ3RFO2FBQ0Y7U0FDRjtRQUVELEtBQUssTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUM3QixRQUFRLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQztZQUN0QixLQUFLLE1BQU0sS0FBSyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEVBQUU7Z0JBQzlCLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7YUFDdEU7U0FDRjtRQUVELE9BQU87WUFDTCxRQUFRO1lBQ1IsTUFBTSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ3JGLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUE3RkQsOENBNkZDIn0=