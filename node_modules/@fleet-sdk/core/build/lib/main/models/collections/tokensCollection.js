"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokensCollection = exports.MAX_TOKENS_PER_BOX = void 0;
const errors_1 = require("../../errors");
const insufficientTokenAmount_1 = require("../../errors/insufficientTokenAmount");
const maxTokensOverflow_1 = require("../../errors/maxTokensOverflow");
const bigIntUtils_1 = require("../../utils/bigIntUtils");
const collection_1 = require("./collection");
exports.MAX_TOKENS_PER_BOX = 120;
class TokensCollection extends collection_1.Collection {
    constructor(tokens, options) {
        super();
        if (tokens) {
            this.add(tokens, options);
        }
    }
    _add(tokenId, amount, sum) {
        if (sum) {
            for (const token of this._items) {
                if (token.tokenId === tokenId) {
                    token.amount += (0, bigIntUtils_1.toBigInt)(amount);
                    return;
                }
            }
        }
        if (this._items.length >= exports.MAX_TOKENS_PER_BOX) {
            throw new maxTokensOverflow_1.MaxTokensOverflow();
        }
        this._items.push({ tokenId, amount: (0, bigIntUtils_1.toBigInt)(amount) });
    }
    add(tokenOrTokens, options) {
        const sum = options ? options.sum : true;
        if (!Array.isArray(tokenOrTokens)) {
            this._add(tokenOrTokens.tokenId, tokenOrTokens.amount, sum);
            return this;
        }
        for (const token of tokenOrTokens) {
            this._add(token.tokenId, token.amount, sum);
        }
        return this;
    }
    remove(tokenIdOrIndex, amount) {
        let index = -1;
        if (typeof tokenIdOrIndex === "number") {
            if (this._isIndexOutOfBounds(tokenIdOrIndex)) {
                throw new RangeError(`Index '${tokenIdOrIndex}' is out of range.`);
            }
            index = tokenIdOrIndex;
        }
        else {
            index = this._items.findIndex((token) => token.tokenId === tokenIdOrIndex);
            if (this._isIndexOutOfBounds(index)) {
                throw new errors_1.NotFoundError(`TokenId '${tokenIdOrIndex}' not found in assets collection.`);
            }
        }
        if (amount && index > -1) {
            const bigAmount = (0, bigIntUtils_1.toBigInt)(amount);
            const token = this._items[index];
            if (bigAmount > token.amount) {
                throw new insufficientTokenAmount_1.InsufficientTokenAmount(`Insufficient token amount to perform a subtraction operation.`);
            }
            else if (bigAmount < token.amount) {
                token.amount -= bigAmount;
                return this;
            }
        }
        if (index > -1) {
            this._items.splice(index, 1);
        }
        return this;
    }
}
exports.TokensCollection = TokensCollection;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW5zQ29sbGVjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9tb2RlbHMvY29sbGVjdGlvbnMvdG9rZW5zQ29sbGVjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx5Q0FBNkM7QUFDN0Msa0ZBQStFO0FBQy9FLHNFQUFtRTtBQUVuRSx5REFBbUQ7QUFDbkQsNkNBQTBDO0FBRTdCLFFBQUEsa0JBQWtCLEdBQUcsR0FBRyxDQUFDO0FBSXRDLE1BQWEsZ0JBQWlCLFNBQVEsdUJBQStCO0lBS25FLFlBQVksTUFBb0QsRUFBRSxPQUF5QjtRQUN6RixLQUFLLEVBQUUsQ0FBQztRQUVSLElBQUksTUFBTSxFQUFFO1lBQ1YsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDO0lBRU8sSUFBSSxDQUFDLE9BQWdCLEVBQUUsTUFBYyxFQUFFLEdBQVk7UUFDekQsSUFBSSxHQUFHLEVBQUU7WUFDUCxLQUFLLE1BQU0sS0FBSyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQy9CLElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxPQUFPLEVBQUU7b0JBQzdCLEtBQUssQ0FBQyxNQUFNLElBQUksSUFBQSxzQkFBUSxFQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUVqQyxPQUFPO2lCQUNSO2FBQ0Y7U0FDRjtRQUVELElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksMEJBQWtCLEVBQUU7WUFDNUMsTUFBTSxJQUFJLHFDQUFpQixFQUFFLENBQUM7U0FDL0I7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsSUFBQSxzQkFBUSxFQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBUU0sR0FBRyxDQUNSLGFBQTBELEVBQzFELE9BQXlCO1FBRXpCLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBRXpDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBRTVELE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxLQUFLLE1BQU0sS0FBSyxJQUFJLGFBQWEsRUFBRTtZQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztTQUM3QztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUlNLE1BQU0sQ0FBQyxjQUFnQyxFQUFFLE1BQWU7UUFDN0QsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDZixJQUFJLE9BQU8sY0FBYyxLQUFLLFFBQVEsRUFBRTtZQUN0QyxJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsRUFBRTtnQkFDNUMsTUFBTSxJQUFJLFVBQVUsQ0FBQyxVQUFVLGNBQWMsb0JBQW9CLENBQUMsQ0FBQzthQUNwRTtZQUVELEtBQUssR0FBRyxjQUFjLENBQUM7U0FDeEI7YUFBTTtZQUNMLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxjQUFjLENBQUMsQ0FBQztZQUUzRSxJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDbkMsTUFBTSxJQUFJLHNCQUFhLENBQUMsWUFBWSxjQUFjLG1DQUFtQyxDQUFDLENBQUM7YUFDeEY7U0FDRjtRQUVELElBQUksTUFBTSxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRTtZQUN4QixNQUFNLFNBQVMsR0FBRyxJQUFBLHNCQUFRLEVBQUMsTUFBTSxDQUFDLENBQUM7WUFDbkMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUVqQyxJQUFJLFNBQVMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFO2dCQUM1QixNQUFNLElBQUksaURBQXVCLENBQy9CLCtEQUErRCxDQUNoRSxDQUFDO2FBQ0g7aUJBQU0sSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRTtnQkFDbkMsS0FBSyxDQUFDLE1BQU0sSUFBSSxTQUFTLENBQUM7Z0JBRTFCLE9BQU8sSUFBSSxDQUFDO2FBQ2I7U0FDRjtRQUVELElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzlCO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0Y7QUEvRkQsNENBK0ZDIn0=