/// <reference types="node" />
import { SortingDirection, SortingSelector } from "../types";
export declare function isEmpty<T extends object>(obj?: T): obj is undefined;
export declare function isEmpty<T>(array?: T[]): array is undefined;
export declare function some<T extends object>(obj?: T): obj is T;
export declare function some<T>(array?: T[]): array is T[];
export declare function first(array: undefined): undefined;
export declare function first(array: Buffer): number;
export declare function first<T>(array: T[]): T;
/**
 * Check for duplicate elements using the equality operator
 */
export declare function hasDuplicates<T>(array: T[]): boolean;
/**
 * Check for duplicate keys in complex elements
 */
export declare function hasDuplicatesBy<T>(array: T[], selector: (value: T) => unknown): boolean;
export declare function chunk<T>(array: T[], size: number): T[][];
export declare function orderBy<T>(array: T[], iteratee: SortingSelector<T>, order?: SortingDirection): T[];
