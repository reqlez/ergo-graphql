import { Amount, TokenAmount, TokenId } from "../../types";
import { Collection } from "./collection";
export declare const MAX_TOKENS_PER_BOX = 120;
export declare type AddTokenOptions = {
    sum: boolean;
};
export declare class TokensCollection extends Collection<TokenAmount<bigint>> {
    constructor();
    constructor(token: TokenAmount<Amount>);
    constructor(tokens: TokenAmount<Amount>[]);
    constructor(tokens: TokenAmount<Amount>[], options: AddTokenOptions);
    private _add;
    add(tokens: TokenAmount<Amount>[], sum?: AddTokenOptions): TokensCollection;
    add(token: TokenAmount<Amount>, sum?: AddTokenOptions): TokensCollection;
    add(tokenOrTokens: TokenAmount<Amount> | TokenAmount<Amount>[], options?: AddTokenOptions): TokensCollection;
    remove(tokenId: TokenId, amount?: Amount): TokensCollection;
    remove(index: number, amount?: Amount): TokensCollection;
}
