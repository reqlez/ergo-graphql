import { regularBoxesMock } from "../mocks/mockBoxes";
import { sumBy } from "./bigIntUtils";
import { areRegistersDenselyPacked, sumBoxes, sumByTokenId } from "./boxUtils";
describe("Box sumByTokenId", () => {
    it("Should sum correctly", () => {
        const inputs = regularBoxesMock.filter((input) => [
            "2555e34138d276905fe0bc19240bbeca10f388a71f7b4d2f65a7d0bfd23c846d",
            "467b6867c6726cc5484be3cbddbf55c30c0a71594a20c1ac28d35b5049632444",
            "2555e34138d276905fe0bc19240bbeca10f388a71f7b4d2f65a7d0bfd23c846d"
        ].includes(input.boxId));
        expect(sumByTokenId(inputs, "0cd8c9f416e5b1ca9f986a7f10a84191dfb85941619e49e53c0dc30ebf83324b")).toBe(3819n);
    });
    it("Should return zero for empty arrays", () => {
        expect(sumByTokenId([], "0cd8c9f416e5b1ca9f986a7f10a84191dfb85941619e49e53c0dc30ebf83324b")).toBe(0n);
    });
});
describe("Sum boxes", () => {
    it("Should sum all tokens and nanoErgs", () => {
        const boxes = regularBoxesMock.filter((input) => [
            "e56847ed19b3dc6b72828fcfb992fdf7310828cf291221269b7ffc72fd66706e",
            "a2c9821f5c2df9c320f17136f043b33f7716713ab74c84d687885f9dd39d2c8a",
            "3e67b4be7012956aa369538b46d751a4ad0136138760553d5400a10153046e52",
            "2555e34138d276905fe0bc19240bbeca10f388a71f7b4d2f65a7d0bfd23c846d"
        ].includes(input.boxId));
        expect(sumBoxes(boxes)).toEqual({
            nanoErgs: sumBy(boxes, (x) => x.value),
            tokens: [
                {
                    tokenId: "007fd64d1ee54d78dd269c8930a38286caa28d3f29d27cadcb796418ab15c283",
                    amount: 226652336n
                },
                {
                    tokenId: "0cd8c9f416e5b1ca9f986a7f10a84191dfb85941619e49e53c0dc30ebf83324b",
                    amount: 10n
                }
            ]
        });
    });
    it("Should sum if box doesn't contains tokens", () => {
        const boxes = regularBoxesMock.filter((input) => [
            "e56847ed19b3dc6b72828fcfb992fdf7310828cf291221269b7ffc72fd66706e",
            "30cb07d93f16f5b052e9f56c1b5dfb83db9ccaeb467dde064933afc23beb6f5f"
        ].includes(input.boxId));
        expect(sumBoxes(boxes)).toEqual({
            nanoErgs: sumBy(boxes, (x) => x.value),
            tokens: []
        });
    });
});
describe("Densely pack check - areRegistersDenselyPacked()", () => {
    it("Should pass for VALID registers packing", () => {
        expect(areRegistersDenselyPacked({
            R4: "0580c0fc82aa02"
        })).toBeTruthy();
        expect(areRegistersDenselyPacked({
            R4: "0580c0fc82aa02",
            R5: "07036b84756b351ee1c57fd8c302e66a1bb927e5d8b6e1a8e085935de3971f84ae17"
        })).toBeTruthy();
        expect(areRegistersDenselyPacked({
            R4: "0580c0fc82aa02",
            R5: "0580c0fc82aa02",
            R6: "0580c0fc82aa02",
            R7: "0580c0fc82aa02",
            R8: "0580c0fc82aa02",
            R9: "0580c0fc82aa02"
        })).toBeTruthy();
    });
    it("Should fail for INVALID registers packing", () => {
        // R4 not included
        expect(areRegistersDenselyPacked({
            R5: "0580c0fc82aa02"
        })).toBeFalsy();
        // R5 not included
        expect(areRegistersDenselyPacked({
            R4: "0580c0fc82aa02",
            R6: "07036b84756b351ee1c57fd8c302e66a1bb927e5d8b6e1a8e085935de3971f84ae17"
        })).toBeFalsy();
        // R4, R5 and R6 not included
        expect(areRegistersDenselyPacked({
            R7: "07036b84756b351ee1c57fd8c302e66a1bb927e5d8b6e1a8e085935de3971f84ae17"
        })).toBeFalsy();
        // R5, R6, R7 and R8 not included
        expect(areRegistersDenselyPacked({
            R4: "0580c0fc82aa02",
            R9: "07036b84756b351ee1c57fd8c302e66a1bb927e5d8b6e1a8e085935de3971f84ae17"
        })).toBeFalsy();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94VXRpbHMuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy91dGlscy9ib3hVdGlscy5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFL0UsUUFBUSxDQUFDLGtCQUFrQixFQUFFLEdBQUcsRUFBRTtJQUNoQyxFQUFFLENBQUMsc0JBQXNCLEVBQUUsR0FBRyxFQUFFO1FBQzlCLE1BQU0sTUFBTSxHQUFHLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQy9DO1lBQ0Usa0VBQWtFO1lBQ2xFLGtFQUFrRTtZQUNsRSxrRUFBa0U7U0FDbkUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUN4QixDQUFDO1FBRUYsTUFBTSxDQUNKLFlBQVksQ0FBQyxNQUFNLEVBQUUsa0VBQWtFLENBQUMsQ0FDekYsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMscUNBQXFDLEVBQUUsR0FBRyxFQUFFO1FBQzdDLE1BQU0sQ0FDSixZQUFZLENBQUMsRUFBRSxFQUFFLGtFQUFrRSxDQUFDLENBQ3JGLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2IsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQztBQUVILFFBQVEsQ0FBQyxXQUFXLEVBQUUsR0FBRyxFQUFFO0lBQ3pCLEVBQUUsQ0FBQyxvQ0FBb0MsRUFBRSxHQUFHLEVBQUU7UUFDNUMsTUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLENBQUMs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